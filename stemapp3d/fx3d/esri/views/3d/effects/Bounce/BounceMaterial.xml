<?xml version="1.0" encoding="UTF-8"?><!-- Copyright @ 2023 Esri. All rights reserved under the copyright laws of the United States and applicable international laws, treaties, and conventions. --><snippets><snippet name="bounceFS"><![CDATA[
#ifdef GL_ES
precision mediump float;
#endif
uniform float sm;uniform vec3 om;uniform vec4 lo;uniform vec4 ll;uniform vec4 so;uniform vec3 oo;uniform float ss;uniform sampler2D im;varying vec4 dd;varying vec3 hd;varying vec3 hc;void main(void){float a=sm*0.01;gl_FragColor.rgb=dd.rgb;gl_FragColor.a=1.0;gl_FragColor=texture2D(im,gl_PointCoord)*gl_FragColor;gl_FragColor.a*=a*0.8;if(gl_FragColor.r<=1e-6&&gl_FragColor.g<=1e-6&&gl_FragColor.b<=1e-6){gl_FragColor.rgb=vec3(0.1,0.1,0.1);gl_FragColor.a*=0.1;}}]]></snippet><snippet name="bounceVS"><![CDATA[attribute vec3 $position;attribute vec2 $auxpos1;uniform mat4 ms;uniform mat4 ls;uniform sampler2D pi;uniform vec2 pp;uniform float ss;uniform float es;uniform vec2 pe;uniform sampler2D po;uniform vec3 is;varying vec4 dd;varying vec3 hd;varying vec3 hc;varying vec3 cg; $linearInterpolator  $lonlat2position  $translationMat  $localTrans  $bounceEaseOut void main(void){float a=fract($auxpos1.y/pp.x);float b=floor($auxpos1.y/pp.y)/pp.y;float c=(texture2D(pi,vec2(a,b))).r;float d=getLinearValue(pe,c);float e=mod(es,ss);float f=getBounceEaseOutValue(e,0.0,c,ss);float g=getLinearValue(pe,f);vec3 h,i;mat4 j=mat4(1.0);
#ifdef GLOBAL
mat4 k=getTransMat($position);h=k[3].xyz;j=toRotationMat(k);vec4 l=vec4(0.0,0.0,1.0,0.0);i=(j*l).xyz;
#else
h=wgs84ToWebMerc($position);i=vec3(0.0,0.0,1.0);
#endif
hd=normalize(i);h+=(i*abs($auxpos1.x)*is.z*g);if($auxpos1.x<0.0){gl_PointSize=getScope(is.xy,d);}else{gl_PointSize=getScope(is.xy,d)*0.4;}gl_Position=ms*ls*vec4(h,1.0);hc=h;dd=texture2D(po,vec2(g,0.5));}]]></snippet><snippet name="timeInfoBounceFS"><![CDATA[
#ifdef GL_ES
precision mediump float;
#endif
uniform float sm;uniform vec3 om;uniform vec4 lo;uniform vec4 ll;uniform vec4 so;uniform vec3 oo;uniform bool drawFlyPath;uniform float ss;uniform sampler2D im;varying vec4 dd;varying vec3 hd;varying vec3 hc;varying vec4 cg; $quintEaseOut void main(void){float a=sm*0.01;gl_FragColor.rgb=dd.rgb;gl_FragColor.a=1.0;if(drawFlyPath){float b=getQuintEaseInOutValue(cg.x,0.0,cg.z-1.0,ss);if(cg.y>b){gl_FragColor.a=0.0;discard;}}else{gl_FragColor=texture2D(im,gl_PointCoord)*gl_FragColor;gl_FragColor.a*=a;}if(gl_FragColor.r<=1e-6&&gl_FragColor.g<=1e-6&&gl_FragColor.b<=1e-6){gl_FragColor.rgb=vec3(0.1,0.1,0.1);}}]]></snippet><snippet name="timeInfoBounceVS"><![CDATA[ $defines attribute vec3 $position;attribute vec2 $auxpos1;uniform mat4 ms;uniform mat4 ls;uniform sampler2D pi;uniform vec2 pp;uniform float ss;uniform float es;uniform vec2 pe;uniform sampler2D po;uniform bool drawFlyPath;uniform vec3 is;uniform float currentIndex;varying vec4 dd;varying vec3 hd;varying vec3 hc;varying vec4 cg; $linearInterpolator  $lonlat2position  $translationMat  $localTrans  $bounceEaseOut void main(void){float a=fract($auxpos1.y/pp.x);float b=floor($auxpos1.y/pp.y)/pp.y;float c=(texture2D(pi,vec2(a,b))).r;float d=getLinearValue(pe,c);float e=mod(es,ss);float f=getBounceEaseOutValue(e,0.0,c,ss);float g=getLinearValue(pe,f);vec3 h,i;if(drawFlyPath){h=$position;hd=normalize(h);}else{mat4 j=mat4(1.0);
#ifdef GLOBAL
mat4 k=getTransMat($position);h=k[3].xyz;j=toRotationMat(k);vec4 l=vec4(0.0,0.0,1.0,0.0);i=(j*l).xyz;
#else
h=wgs84ToWebMerc($position);i=vec3(0.0,0.0,1.0);
#endif
hd=normalize(i);if(currentIndex==$auxpos1.y){h+=(i*abs($auxpos1.x)*is.z*g);}else{h+=(i*abs($auxpos1.x)*is.z*d);}if($auxpos1.x<0.0){gl_PointSize=getScope(is.xy,d);}else{gl_PointSize=getScope(is.xy,d)*0.4;}}if(drawFlyPath){cg=vec4(e,$auxpos1.x,$auxpos1.y,0.0);}gl_Position=ms*ls*vec4(h,1.0);hc=h;dd=texture2D(po,vec2(d,0.5));}]]></snippet></snippets>